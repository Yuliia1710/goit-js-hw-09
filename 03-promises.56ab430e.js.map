{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAYC,SAASC,cAAc,QAyBzC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAhCPL,EAAUa,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBACF,IAAMC,EAAYhB,EAAUiB,KAAKC,MAE3BC,EAAanB,EAAUK,MAAMa,MAE7BE,EAAcpB,EAAUqB,OAAOH,MACjCI,EAAYC,OAAOJ,GACvBK,QAAQC,IAAIH,GACZ,IAAK,IAAII,EAAI,EAAGA,GAAKN,EAAaM,IAChCvB,EAAcuB,EAAGJ,GACdK,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBP,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE9D2B,OAAM,SAAAJ,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBP,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE9DiB,GAAaC,OAAOP,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst inputForm = document.querySelector('form');\n\ninputForm.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const stepInput = inputForm.step.value;\n\n  const delayInput = inputForm.delay.value;\n\n  const amountInput = inputForm.amount.value;\n  let delayTime = Number(delayInput);\n  console.log(delayTime);\n  for (let i = 1; i <= amountInput; i++) {\n    createPromise(i, delayTime)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayTime += Number(stepInput);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$inputForm","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","stepInput","step","value","delayInput","amountInput","amount","delayTime","Number","console","log","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.56ab430e.js.map"}